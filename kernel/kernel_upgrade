#!/bin/bash

echo 
var="https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-"
kernel=`curl -s https://www.kernel.org/ | grep -A1 'stable:' | grep -oP '(?<=strong>).*(?=</strong.*)' | awk 'NR==1{print $1}'`
echo "Latest stable kernel in kernel.org is " $kernel
echo 

echo 
echo "Download the latest stable kernel release frm kernel.org"
echo 

wget -c $var$kernel.tar.xz

if [ $? -ne 0 ]
then
    echo 
    echo "Downlod failed. "
    exit 0
fi 

echo 
echo "Get the signature for the kernel."
echo 

# Download the kernel signature
wget -c $var$kernel.tar.sign
if [ $? -ne 0 ]
then
    echo 
    echo "Kernel signature download failed. "
    exit 0
fi

echo 
echo "Move the kernel to the /usr/src directory."

mv -v linux-$kernel.tar.xz /usr/src/
mv -v linux-$kernel.tar.sign /usr/src/

echo
echo "Jump into the /usr/src directory. "
cd /usr/src/
echo

echo "Decompress the downloaded kernel. "
echo

unxz linux-$kernel.tar.xz

if [ $? -ne 0 ]
then
        echo 
        echo "Kernel Decompressed successfully. "
        exit 0
fi

echo "Check for the kernel signing."
echo 

gpg2 --verify linux-$kernel.tar.sign

if [ $? -ne 0 ]
then
    echo
    echo "Kernel signature verification failed. "
    exit 0
fi

echo "Untar the kernel source. "
tar -xvf linux-$kernel.tar
echo 

if [ $? -ne 0 ]
then
    echo 
    echo "Untar failed. "
    exit 0

cd linux-$kernel
echo 

make clean && make mrproper
echo 

cp /lib/modules/$(uname -r)/config > .config
echo

ls -al .config
echo

make olddefconfig
echo

echo "Build the kernel from Makefile with number of processor available."
make -j $(nproc)
echo 

echo "Install the modules. "
make modules_install
echo 

echo "Install the kernel into the system. "
make install 
echo 

echo "Update the grub configuration file for new kernel. "
grub2-mkconfig -o /boot/grub2/grub.cfg
echo 

echo "Set the newly installed kerenl as a default."
echo
grubby --set-default /boot/vmlinuz-$kernel
echo 

echo "Latest stable kernel Installed into the system successfully. "
read -p "Do you want to restart the system :[y/n]" var
if [ $var == 'y' ]
then 
    restart
else
    exit 0
fi

